diff --git a/es-core/src/platform.cpp b/es-core/src/platform.cpp
index 054633c4..8f73355a 100644
--- a/es-core/src/platform.cpp
+++ b/es-core/src/platform.cpp
@@ -28,7 +28,7 @@ int runShutdownCommand()
 #ifdef WIN32 // windows
 	return system("shutdown -s -t 0");
 #else // osx / linux	
-	return system("shutdown -h now");
+	return system("exit");
 #endif
 }
 
@@ -37,7 +37,7 @@ int runRestartCommand()
 #ifdef WIN32 // windows	
 	return system("shutdown -r -t 0");
 #else // osx / linux	
-	return system("shutdown -r now");
+	return system("exit");
 #endif
 }
 
@@ -117,7 +117,7 @@ int runSystemCommand(const std::string& cmd_utf8, const std::string& name, Windo
 
 	return 1;
 #else
-	return system((cmd_utf8 + " 2> /userdata/system/logs/es_launch_stderr.log | head -300 > /userdata/system/logs/es_launch_stdout.log").c_str()); // batocera
+	return system((cmd_utf8 + " 2> $EMULATIONSTATION_CONFIG_DIR/es_launch_stderr.log | head -300 > $EMULATIONSTATION_CONFIG_DIR/es_launch_stdout.log").c_str()); // batocera
 #endif
 }
 
@@ -182,7 +182,6 @@ void processQuitMode()
 	case QuitMode::SHUTDOWN:
 	case QuitMode::FAST_SHUTDOWN:
 		LOG(LogInfo) << "Shutting system down";
-		touch("/tmp/shutdown.please");
 		runShutdownCommand();
 		break;
 	}
diff --git a/es-core/src/resources/ResourceManager.cpp b/es-core/src/resources/ResourceManager.cpp
index 9be4e726..92ec6e9e 100644
--- a/es-core/src/resources/ResourceManager.cpp
+++ b/es-core/src/resources/ResourceManager.cpp
@@ -45,6 +45,10 @@ std::vector<std::string> ResourceManager::getResourcePaths() const
 	
 	// check in exepath
 	paths.push_back(Utils::FileSystem::getSharedConfigPath() + "/resources"); 
+
+  if(const char* env_p = std::getenv("EMULATIONSTATION_RESOURCES_DIR")) {
+    paths.push_back(env_p); 
+  }
 		
 	// check in cwd
 	auto cwd = Utils::FileSystem::getCWDPath() + "/resources";	
@@ -204,4 +208,4 @@ void ResourceManager::removeReloadable(std::weak_ptr<IReloadable> reloadable)
 		else
 			iter = mReloadables.erase(iter);
 	}
-}
\ No newline at end of file
+}
diff --git a/es-core/src/utils/FileSystemUtil.cpp b/es-core/src/utils/FileSystemUtil.cpp
index 18cf7cd6..c571e9a5 100644
--- a/es-core/src/utils/FileSystemUtil.cpp
+++ b/es-core/src/utils/FileSystemUtil.cpp
@@ -40,11 +40,16 @@ namespace Utils
 		{
 #ifdef WIN32
 			static std::string cfg;
+
 			if (cfg.empty())
 				cfg = Utils::FileSystem::getCanonicalPath(Utils::FileSystem::getHomePath() + "/.emulationstation");
 
 			return cfg;
 #else
+      if(const char* env_p = std::getenv("EMULATIONSTATION_HOME_DIR")) {
+        return env_p;
+      }
+
 			return "/userdata/system/configs/emulationstation"; // batocera
 #endif
 		}
@@ -54,7 +59,11 @@ namespace Utils
 #ifdef WIN32
 			return Utils::FileSystem::getExePath();
 #else
-			return "/usr/share/emulationstation"; // batocera
+      if(const char* env_p = std::getenv("EMULATIONSTATION_CONFIG_DIR")) {
+        return env_p;
+      }
+
+      return "/usr/share/emulationstation"; // batocera
 #endif
 		}
 
